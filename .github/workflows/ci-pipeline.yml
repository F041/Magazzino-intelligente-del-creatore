name: Magazzino Creatore CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Controlli di base e build Docker (senza push)
  pre-checks-and-build:
    name: Pre-Checks and Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # (Puoi aggiungere qui un linting molto leggero o commentarlo per ora)
      # - name: Install linting dependencies
      #   run: pip install flake8
      # - name: Basic Lint with flake8 (non-blocking, very permissive)
      #   run: flake8 . --count --select=E9,F821,F823 --exit-zero # --exit-zero fa sì che non fallisca il job
      #   continue-on-error: true # Alternativa a --exit-zero, il job continua anche se flake8 trova errori

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only, no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false # Non pushare l'immagine in questo job
          load: true # Carica l'immagine nel runner locale di Actions (utile per test futuri sull'immagine)
          tags: ghcr.io/${{ github.repository_owner }}/magazzino-creatore-selfhosted:ci-build-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 2: Build e Push effettivo (solo se il precedente passa e non è una PR)
  build-and-push-ghcr:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    needs: pre-checks-and-build # Dipende dal successo del job precedente

    # Esegui questo job solo su push a 'main', non per le PR
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Nome immagine fisso e in minuscolo per il push
          images: ghcr.io/${{ github.repository_owner }}/magazzino-creatore-selfhosted
          tags: |
            type=sha,prefix=,suffix=,format=short
            latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
